#!/bin/bash

# Load average
function LA {
LANG=C  uptime | \
        sed 's/,//g' | \
        egrep -o '([0-9]+\.[0-9]+)\ ([0-9]+\.[0-9]+)\ ([0-9]+\.[0-9]+)'
}

# Get IPs
function GETIPS {
   LANC=C   ip addr | grep -E  "tun0|eth0|wlan0" | grep -E "inet" |  awk -F ' ' '{ print $7":"$2}' | sed ':a;N;$!ba;s/\n/ /g'
}

# Kill vpn prc
function down {
  LANC=C sudo kill -9 $(ps aux | grep openvpn | grep -v grep | awk -F ' ' '{ print $2 }' | sed ':a;N;$!ba;s/\n/ /g')
}

extract () {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)   tar xjf $1;;
			*.tar.gz)    tar xzf $1;;
			*.bz2)       bunzip2 $1;;
			*.rar)       unrar x $1;;
			*.gz)        gunzip $1;;
			*.tar)       tar xf $1;;
			*.tbz2)      tar xjf $1;;
			*.tbz)       tar -xjvf $1;;
			*.tgz)       tar xzf $1;;
			*.zip)       unzip $1;;
			*.Z)         uncompress $1;;
			*.7z)        7z x $1;;
			*)           echo "I don't know how to extract '$1'...";;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

pk () {
	if [ $1 ] ; then
		case $1 in
			tbz)       tar cjvf $2.tar.bz2 $2;;
			tgz)       tar czvf $2.tar.gz  $2;;
			tar)       tar cpvf $2.tar  $2;;
			bz2)       bzip $2;;
			gz)        gzip -c -9 -n $2 > $2.gz;;
			zip)       zip -r $2.zip $2;;
			7z)        7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on $2.7z $2;;
			*)         echo "'$1' cannot be packed via pk()";;
		esac
	else
		echo "'$1' is not a valid file"
	fi
} 


initenv(){
	
	if [ -f /etc/lsb-release ]; then

        os=$(lsb_release -s -d)

		elif [ -f /etc/debian_version ]; then
		        os="Debian $(cat /etc/debian_version)"
		elif [ -f /etc/redhat-release ]; then
		        os=`cat /etc/redhat-release`
		else
		        os="$(uname -s) $(uname -r)"
	fi

	echo "System: $os"

  	if [ $(echo "$os" |  egrep  -ohi "ubuntu") ]; then
  		#prepare shell
  		sudo apt-get install aptitude mc screen vim git-core git zsh wget openssh-client openssh-server -y
  		wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh 
  		chsh -s `which zsh`

  		#ssh setup ssh
  		echo -en '\n' >> ~/.ssh/authorized_keys
  		wget --no-check-certificate -q -O - https://raw.github.com/storytime/shell-config-files/master/.ssh/my_id_rsa.pub >> ~/.ssh/authorized_keys
  		chmod 700 ~/.ssh
		chmod 600 ~/.ssh/authorized_keys
		echo "Done: $os"
  		exit
	fi

	echo "Exit..."
}
